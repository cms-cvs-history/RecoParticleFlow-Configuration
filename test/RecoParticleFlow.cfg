process RecoParticleFlow = {
    untracked PSet maxEvents = {untracked int32 input = 2}
    
    # Event source
    source = PoolSource{
        untracked vstring fileNames = { '/store/relval/2008/2/11/RelVal-RelValQCD_Pt_50_80-1202721222/0000/0AE2E658-E0D8-DC11-8DF6-000423D9880C.root'    
	}
    }
    

    # Messages
    # include "FWCore/MessageService/data/MessageLogger.cfi"    
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    include "Configuration/StandardSequences/data/FrontierConditions.cff"

    service = MessageLogger  {
	untracked vstring destinations   = { "cout" }
	untracked vstring categories     = {
	    "PFClusterProducer",
	    "PFSimParticleProducer",
	    "PFBlockProducer",
	    "PFProducer"
	}
	untracked vstring debugModules   = { "*" }
	untracked PSet cout = { 
	    untracked string threshold = "INFO"
	    untracked PSet INFO            = { untracked int32 limit = 0 }
	    untracked PSet DEBUG           = { untracked int32 limit = 0 }
	    untracked PSet PFClusterProducer = { 
		untracked int32 limit = 10000000
	    }
	    untracked PSet PFBlockProducer = { 
		untracked int32 limit = 10000000
	    }
	    untracked PSet PFProducer = { 
		untracked int32 limit = 10000000
	    }
	} 
    }

    replace particleFlowBlock.verbose = true
    replace particleFlow.verbose = true

#    replace particleFlow.debug = true

    include 'Configuration/EventContent/data/EventContent.cff'
    module FEVT = PoolOutputModule {
	untracked string fileName = 'file:test.root'
	using AODEventContent
    }
    module dump = EventContentAnalyzer {} 
    # Output    
    path p = { particleFlowReco }
    #path p = { dump }
    endpath outpath = {FEVT}

}

