process RecoParticleFlow = {
    untracked PSet maxEvents = {untracked int32 input = 2}
    
    # Event source
    source = PoolSource{
        untracked vstring fileNames = { '/store/mc/2008/1/13/RelVal-RelValTTbar-1200264627/0000/2AC3C463-4EC2-DC11-BD87-000423D98804.root' }	
    }
    

    # Messages
    #include "FWCore/MessageService/data/MessageLogger.cfi"    
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    include "RecoParticleFlow/Configuration/data/RecoParticleFlow_nuclear.cff"
    include "Configuration/StandardSequences/data/FrontierConditions.cff"

#    replace particleFlow.debug = true
    service = MessageLogger  {
        untracked vstring destinations   = { "cout" }
        untracked vstring categories     = {
            "PFClusterProducer",
            "PFSimParticleProducer",
            "PFBlockProducer",
            "PFProducer"
        }
        untracked vstring debugModules   = { "*" }
        untracked PSet cout = {
            untracked string threshold = "INFO"
            untracked PSet INFO            = { untracked int32 limit = 0 }
            untracked PSet DEBUG           = { untracked int32 limit = 0 }
            untracked PSet PFClusterProducer = {
                untracked int32 limit = 10000000
            }
            untracked PSet PFBlockProducer = {
                untracked int32 limit = 10000000
            }
            untracked PSet PFProducer = {
                untracked int32 limit = 10000000
            }
        }
    }


    replace particleFlowBlock.verbose = true
    replace particleFlow.verbose = true


    include 'Configuration/EventContent/data/EventContent.cff'
    module FEVT = PoolOutputModule {
	untracked string fileName = 'file:test.root'
#	using FEVTSIMEventContent
    }
    module dump = EventContentAnalyzer {} 
    # Output    
    #path p = { particleFlowReco }
    path p = { particleFlowRecoNuclear }
    #path p = { dump }
    endpath outpath = {FEVT}

}

